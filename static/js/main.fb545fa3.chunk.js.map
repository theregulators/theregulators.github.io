{"version":3,"sources":["media.component.js","index.component.js","about-dropdown.component.js","solution.component.js","background.component.js","chemistry.component.js","technology.component.js","resources.component.js","about.component.js","team.component.js","app-router.js","index.js"],"names":["imagesHtml","IndexComponent","react_default","a","createElement","Row","className","Col","xs","Jumbotron","fluid","id","Container","src","alt","Link","to","muted","loop","controls","type","md","style","background","backgroundSize","autoPlay","React","Component","AboutDropdownComponent","Dropdown","Menu","show","position","Header","lib","Item","SolutionComponent","about_dropdown_component","BackgroundComponent","ChemistryComponent","TechnologyComponent","class","ResourcesComponent","href","download","DefaultAbout","AboutComponent","Switch","Route","path","component","Solution","Background","Chemistry","Technology","Resources","teamMembersHtml","name","tagline","description","profilePicture","map","member","key","Card","width","Img","variant","Body","TeamComponent","images","url","caption","MediaComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedImage","image","ind","title","data-ind","onClick","selectImage","bind","assertThisInitialized","backgroundImage","concat","event","setState","target","dataset","Modal","onHide","handleClose","closeButton","Title","AppRouter","BrowserRouter","Navbar","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","exact","Index","About","Team","Media","ReactDOM","render","app_router","document","getElementById"],"mappings":"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","file":"static/js/main.fb545fa3.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Container, Row, Col, Modal } from 'react-bootstrap';\n\nconst images = [\n  {\n    url: '/assets/app-screenshot.png',\n    caption: 'Labelled screenshot of app'\n  },\n  {\n    url: '/assets/jon-coding.jpg',\n    caption: 'Jon happily coding away'\n  },\n  {\n    url: '/assets/peter-scale.jpg',\n    caption: 'Peter in the lab'\n  },\n  {\n    url: '/assets/mesh-filter.jpg',\n    caption: 'Mesh filter for red blood cells'\n  },\n  {\n    url: '/assets/tmb-colors.jpg',\n    caption: 'Colors of different TMB concentrations'\n  },\n  {\n    url: '/assets/glucose-solutions.jpg',\n    caption: 'Prepared glucose solutions'\n  },\n  {\n    url: '/assets/calibration-curve.jpg',\n    caption: 'Color-concentration regressions'\n  },\n  {\n    url: '/assets/team-askew.jpg',\n    caption: 'Everyone looking askew'\n  },\n];\nlet imagesHtml;\n\nclass MediaComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedImage: null\n    };\n    imagesHtml = images.map((image, ind) => (<Col xs={12} md={4} key={image.url}>\n      <div\n        className='gallery-image rounded shadow'\n        title={image.caption}>\n        <div\n          data-ind={ind}\n          onClick={this.selectImage.bind(this)}\n          style={{ backgroundImage: `url('${image.url}')` }}\n          className='gallery-image-child'></div>\n      </div>\n    </Col>));\n  }\n\n  selectImage(event) {\n    this.setState({\n      selectedImage: images[event.target.dataset.ind]\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      selectedImage: null\n    });\n  }\n\n  render() {\n    return (<Container className='my-5'>\n      <Modal show={this.state.selectedImage ? true : false} onHide={this.handleClose.bind(this)}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.state.selectedImage ? this.state.selectedImage.caption : ''}</Modal.Title>\n        </Modal.Header>\n        <img src={this.state.selectedImage ? this.state.selectedImage.url : ''} className='mw-100 w-100' alt={this.state.selectedImage ? this.state.selectedImage.caption : ''} />\n      </Modal>\n\n      <h3>Gallery</h3>\n      <p>Click/tap an image to expand it.</p>\n\n      <Row>\n        {imagesHtml}\n      </Row>\n    </Container>);\n  }\n}\n\nexport default MediaComponent;\n","import React from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nclass IndexComponent extends React.Component {\n  render() {\n    return (<Row className='mx-0'>\n      <Col xs='12' className='p-0'>\n        <Jumbotron fluid className='jumbotron-impression text-center d-flex flex-column justify-content-center mb-0 bg-dark text-light' id=''>\n          <Container>\n            <Row>\n              <Col>\n                <img className='mb-4' id='strip-img' src='./assets/strip.svg' alt='The Regulator is a low-cost colorimetric test strip for blood glucose testing.' />\n                <h1 className='display-5'>Low-cost blood sugar monitoring</h1>\n                <h5 className='font-weight-light'><Link to='/about/solution'>How do we do it?</Link></h5>\n              </Col>\n              <Col>\n                <video muted loop controls id='main-video' className='bg-light'>\n                  <source src='/assets/intro-video.webm' type='video/webm' />\n                  <source src='/assets/intro-video.mp4' type='video/mp4' />\n                </video>\n              </Col>\n            </Row>\n          </Container>\n        </Jumbotron>\n      </Col>\n      <Col md='6' xs='12' className='p-0'>\n        <Jumbotron fluid className='jumbotron-impression text-center d-flex flex-column justify-content-center text-light mb-0'\n          style={{ background: 'linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url(/assets/code.png)', backgroundSize: 'cover' }}>\n          <Container>\n            <h1 className='display-5'>Modern</h1>\n            <h5 className='font-weight-light'><Link to='/about/technology'>See our tech stack.</Link></h5>\n          </Container>\n        </Jumbotron>\n      </Col>\n      <Col md='6' xs='12' className='p-0'>\n        <Jumbotron fluid className='jumbotron-impression text-center d-flex flex-column justify-content-center text-light mb-0'\n          style={{ background: 'linear-gradient(rgba(0,0,0,0.7), rgba(0,0,0,0.7)), url(/assets/team.jpg)', backgroundSize: 'cover' }}>\n          <Container>\n            <h1 className='display-5'>See what we do</h1>\n            <h5 className='font-weight-light'><Link to='/media'>See the gallery.</Link></h5>\n          </Container>\n        </Jumbotron>\n      </Col>\n      <Col xs='12' className='p-0'>\n        <Jumbotron fluid className='jumbotron-impression text-center d-flex flex-column justify-content-center text-light mb-0' id='header-jumbotron'>\n          <video autoPlay muted loop id='header-video'>\n            <source src='/assets/header.webm' type='video/webm' />\n          </video>\n          <Container>\n            <h1 className='display-5'>We are The Regulators</h1>\n            <h5 className='font-weight-light'><Link to='/team'>Meet the team</Link></h5>\n          </Container>\n        </Jumbotron>\n      </Col>\n    </Row>);\n  }\n}\n\nexport default IndexComponent;\n","import React from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\n\nclass AboutDropdownComponent extends React.Component {\n  render() {\n    return (<div>\n      <Dropdown.Menu show className='float-none w-auto d-inline-block mb-3' style={{ position: 'static' }}>\n        <Dropdown.Header>About the Colorimetric Test Strip</Dropdown.Header>\n        <LinkContainer to='/about/solution'>\n          <Dropdown.Item>Solution</Dropdown.Item>\n        </LinkContainer>\n        <LinkContainer to='/about/background'>\n          <Dropdown.Item>Background</Dropdown.Item>\n        </LinkContainer>\n        <LinkContainer to='/about/chemistry'>\n          <Dropdown.Item>Chemistry</Dropdown.Item>\n        </LinkContainer>\n        <LinkContainer to='/about/technology'>\n          <Dropdown.Item>Technology</Dropdown.Item>\n        </LinkContainer>\n        <LinkContainer to='/about/resources'>\n          <Dropdown.Item>Resources</Dropdown.Item>\n        </LinkContainer>\n      </Dropdown.Menu>\n    </div>);\n  }\n}\n\nexport default AboutDropdownComponent;\n","import React from 'react';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\nclass SolutionComponent extends React.Component {\n  render() {\n    return (<div>\n      <h3>Solution</h3>\n      <AboutDropdownComponent />\n      <h5 className='mt-3'>Overview</h5>\n      <p>The objective of this project is to create a low-cost alternative to blood glucose testing using glucometers for the people of Kampala, Uganda and other developing countries to develop cheap and effective test strips. The strips would be easy to use and accurate. A user would apply a drop of blood to a test strip which would produce a color change based on the level of glucose in the sample. In addition to the strips, we hope to create a corresponding app which would accurately read the color change.</p>\n      <p>Our project is centered on glucose colorimetric paper test strips and focused on improving the visual accuracy of the blood sugar determination through indicator experimentation. When glucose is introduced to the strips, a color change occurs and indicates the relative blood glucose and diabetic status of the user. Glucose oxidase, the primary glucose reagent in glucometers, will be used in these test strips to produce gluconic acid and hydrogen peroxide. We plan to use indicators such as potassium iodide (using the well-known starch-iodide color change), TMB, and 2,2`-Bipyridine (Fe complex); these indicators can all be used to visually differentiate between different levels of hydrogen peroxide, which should be approximately proportional to blood glucose levels. The glucose oxidase and indicator solutions will be distributed in bottles, from which tests can be conducted dropwise onto strips of A4 copy paper. To complement the colorimetric strips, we hope to create a smartphone application that uses camera input and a color analysis algorithm to determine the glucose level (to a reasonable accuracy) based on the color of the strips. The Uganda Bureau of Statistics shows that 86% of 18-30-year-olds own a smartphone and most Kampala households have access to a smartphone so a mobile app is reasonable.</p>\n    </div>);\n  }\n}\n\nexport default SolutionComponent;\n","import React from 'react';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\nclass BackgroundComponent extends React.Component {\n  render() {\n    return (<div>\n      <h3>Background</h3>\n      <AboutDropdownComponent />\n      <h5 className='mt-3'>About Diabetes</h5>\n      <p>Diabetes is a chronic disease where the body lacks the ability to produce enough insulin. Since diabetes is incurable, checking daily blood glucose levels are vital in ensuring well-being and safety. Currently, the most prevalent method is to use a glucometer with one-time-use test strips, where glucometers range from $40 to $601 and individual test strips cost between $0.40 to $2.002. However, in a city like Kampala, the average monthly income is roughly $300 per family, which makes it too costly for regular check-ups.</p>\n    </div>);\n  }\n}\n\nexport default BackgroundComponent;\n","import React from 'react';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\nclass ChemistryComponent extends React.Component {\n  render() {\n    return (<div>\n      <h3>Chemistry</h3>\n      <AboutDropdownComponent />\n      <p>The idea of a colorimetric test strip was tested by G-Cubed solutions (Chan et al, 2017) the previous year. The test strip currently consists of a mixture of chemical indicators, a filter mesh and a small strip of plain white printer paper. The printer paper was chosen because it is the cheapest, uniform paper that was found. The chemical mix is made up of TMB or 3,3',5,5'-Tetramethylbenzidine, Horseradish peroxidase, and glucose oxidase dissolved in a mixture of ethanol and deionized water. When it comes into contact with glucose, the glucose oxidase will break it down and produce gluconic acid and hydrogen peroxide. Horseradish peroxidase then oxidizes the TMB using hydrogen peroxide and produces a blue color change. The filter mesh is used to filter out the Red blood cells from the sample of blood. This is done to remove the red color in the blood as to not affect the color of the test. The filter mesh is made up of electrospun polymers with a weave small enough to limit the passage of cells including RBC through it.</p>\n      <p>The mixture of chemicals and the amount to put on the test strip was found based on the effective units of each reagent. The Glucose oxidase mixture was 30 units per ml, the Horseradish Peroxidase was 60 units per ml and it was decided to make the TMB mass equal to the peroxidase due to a lack of unit measurement.</p>\n      <p>The test strip is made by placing the sample blood through the filter mesh, onto the piece of paper then adding the chemical mixture. This was found to be the best order due to the red color that developed from putting the chemical mixture first.</p>\n    </div>);\n  }\n}\n\nexport default ChemistryComponent;\n","import React from 'react';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\nclass TechnologyComponent extends React.Component {\n  render() {\n    return (<div>\n      <h3>Technology</h3>\n      <AboutDropdownComponent />\n      <p>A mobile Android app was created to find the blood glucose level from an image of our test strip. It&apos;s simple for a user to use the app: point the camera at the image, click a button, and then the process is complete! The device camera stream will be shown with a guide in the app, along with two buttons to analyze and save measurements. A brief how-to guide is included in the About tab of the app.</p> \n      <figure class='figure d-block p-3'>\n        <img class='figure-img d-block m-auto rounded mw-100' alt='Various features of the app.' src='/assets/app-screenshot.png' />\n        <figcaption class='figure-caption text-center pt-2'>Various features of the app.</figcaption>\n      </figure>\n      <p>The image analysis generates clusters of similarly-colored pixels. The clusters are filters by size, center, &quot;jump&quot; error, and color to find the one representative of the darkest blue ring. Test data generated logarithmic trendlines to estimate blood sugar level from color. The color of the paper was used to estimate and account for lighting.</p>\n      <p>This method offers several benefits over the app from last year, which used a blind arithmetic average of colors in a rectangular region. With consistent lighting, our app was accurate to ±30g/dL concentration.</p>\n      <figure class='figure d-block p-3'>\n        <img class='figure-img d-block m-auto rounded mw-100' alt='GIF of app in use.' src='/assets/app-demo.gif' />\n        <figcaption class='figure-caption text-center pt-2'>The app in use. The glucose concentrations of the samples are 230mg/dL, 150mg/dL, 130mg/dL, and 70mg/dL.</figcaption>\n      </figure>\n\n      <p>In addition to the app, we have a reference color guide to visually determine blood glucose level, similar to that for the universal pH test strip.</p>\n\n      <hr />\n\n      <h5>Technical Description</h5>\n      <p>The mobile app makes it easy for a user to determine blood glucose level from the test strip: the user points the camera at the image, and clicks the &quot;Analyze&quot; button. The device camera stream will be shown with a guiding marker in the app. A brief how-to guide in the app to help users.</p>\n      <p>The color detection is a set of heuristics determined by trial and error. The major steps were threshold all of the pixels into clusters (i.e., breaking down the 2^24 color space down to 2^12 clusters), and filtering out clusters based on number of pixels (too few would indicate an insignificant splotch, such as a speck of dust, and too large might indicate a background color), center (the center of the clustered pixels should be near the center of the camera input), error using the &quot;jump method&quot<sup className='text-secondary'>1</sup>, and color (the dark blue ring was determined to be the best indicator of color, and thus the algorithm biased dark and primarily-blue clusters). The few clusters that remained would be averaged (weighted averaged based on number of pixels per cluster), and the R, G, and B values of this cluster would be put through the inverse trend lines generated by the model (see answer to (2)) to guess at the blood glucose level. The three estimates (one for R, G, and B) would be averaged (weighted based on R^2) to get a final BGL determination. This offers results better than the ones from last year’s app because it does not require any user input and can capture more complex patterns (i.e., the rings of color).</p>\n      <figure class='figure d-block p-3'>\n        <img class='figure-img d-block m-auto rounded mw-100' alt='Calibration curves' src='/assets/calibration-curve.jpg' />\n        <figcaption class='figure-caption text-center pt-2'>Calibration curves for R, G, and B colors, with logarithmic trendlines.</figcaption>\n      </figure>\n      <p>The calibration &quot;trials&quot; involved running the heuristic filtering on the samples, and plotting the final cluster against BGL concentration. A trend line was created for each color. (A polynomial trend line worked best, but its end behavior did not make sense; the close-behind logarithmic models seemed more reasonable). Unsurprisingly, the trend line for the blue component was strongest, indicating that the difference between the blue could most reliably be used to determine BGL.</p>\n      <p>The concentrations of the samples for calibration were known. When the heuristics are performed on these samples, there is some variation. If used correctly and lighting is consistent, the variation in readings of the same sample varied by up to roughly ±30mg/dL. While this may seem like a wide range of error, diabetics&apos; blood sugar levels can range far greater<sup className='text-secondary'>2</sup>, so it should still be a useful metric. With further experimentation, however, it is expected that the the algorithm should improve and variation should decrease, and user error and lighting will be better accounted for.</p>\n    <small class='text-secondary'>[1]: https://blog.algolia.com/how-we-handled-color-identification/<br />[2]: https://www.joeniekrofoundation.com/stroke-2/3685/attachment/diabetes-blood-sugar-chart/</small>\n    </div>);\n  }\n}\n\nexport default TechnologyComponent;\n","import React from 'react';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\nclass ResourcesComponent extends React.Component {\n  render() {\n    return (<div>\n      <h3>Resources and Documents</h3>\n      <AboutDropdownComponent />\n\n      <p>Click on one of the files below to download it.</p>\n      <ul>\n        <li>\n          <span className='text-secondary small mr-3'>[PDF, modified 11/1/18]</span>\n          <a href='/downloads/regulators-summary_of_methods_for_experts.pdf' download>Summary of Methods (for Experts)</a>\n        </li>\n        <li>\n          <span className='text-secondary small mr-3'>[PDF, modified 10/30/18]</span>\n          <a href='/downloads/regulators-design_summary_presentation.pdf' download>Design Summary Presentation</a>\n        </li>\n        <li>\n          <span className='text-secondary small mr-3'>[PPTX, modified 10/30/18]</span>\n          <a href='/downloads/regulators-design_summary_presentation.pptx' download>Design Summary Presentation</a>\n        </li>\n        <li>\n          <span className='text-secondary small mr-3'>[PDF, modified 10/29/18]</span>\n          <a href='/downloads/regulators-joint_midterm_presentation_eid101e.pdf' download>Joint Midterm Presentation EID101E</a>\n        </li>\n        <li>\n          <span className='text-secondary small mr-3'>[PPTX, modified 10/29/18]</span>\n          <a href='/downloads/regulators-joint_midterm_presentation_eid101e.pptx' download>Joint Midterm Presentation EID101E</a>\n        </li>\n        <li>\n          <span className='text-secondary small mr-3'>[DOCX, modified 10/10/18]</span>\n          <a href='/downloads/regulators-duncker_diagram.docx' download>Duncker Diagram</a>\n        </li>\n      </ul>\n    </div>);\n  }\n}\n\nexport default ResourcesComponent;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\n\nimport Solution from './solution.component';\nimport Background from './background.component';\nimport Chemistry from './chemistry.component';\nimport Technology from './technology.component';\nimport Resources from './resources.component';\n\nimport AboutDropdownComponent from './about-dropdown.component';\n\n// if none of the specialty about pages are used\nconst DefaultAbout = () => (<div>\n  <h3>Choose one of the about pages for more information.</h3>\n  <AboutDropdownComponent />\n</div>);\n\nclass AboutComponent extends React.Component {\n  render() {\n    return (<Container className='my-5'>\n\n      {/* routes */}\n      <Switch>\n        <Route path='/about/solution/' component={Solution} />\n        <Route path='/about/background/' component={Background} />\n        <Route path='/about/chemistry/' component={Chemistry} />\n        <Route path='/about/technology/' component={Technology} />\n        <Route path='/about/resources/' component={Resources} />\n        <Route component={DefaultAbout} />\n      </Switch>\n\n    </Container>);\n  }\n}\n\nexport default AboutComponent;\n","import React from 'react';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\n\nconst teamMembers = [\n  {\n    'name': 'Peter Baccarella',\n    'tagline': 'Chemistry Team',\n    'description': '',\n    'profilePicture': '/assets/peter.jpg'\n  },\n  {\n    'name': 'Catherine Chen',\n    'tagline': 'Chemistry Team',\n    'description': '',\n    'profilePicture': '/assets/catherine.jpg'\n  },\n  {\n    'name': 'Vincent Wang',\n    'tagline': 'Chemistry Team',\n    'description': '',\n    'profilePicture': '/assets/vincent.jpg'\n  },\n  {\n    'name': 'Emily Yasharpour',\n    'tagline': 'Chemistry Team',\n    'description': '',\n    'profilePicture': '/assets/emily.jpg'\n  },\n  {\n    'name': 'Jonathan Lam',\n    'tagline': 'Technology Team',\n    'description': '',\n    'profilePicture': '/assets/jonathan.jpg'\n  },\n  {\n    'name': 'Amy Leong',\n    'tagline': 'Technology Team',\n    'description': '',\n    'profilePicture': '/assets/amy.jpg'\n  }\n];\nconst teamMembersHtml = teamMembers.map(member => (<Col key={member.name} className='mb-3'>\n  <Card style={{ width: '18rem' }}>\n    <Card.Img variant='top' src={member.profilePicture} />\n    <Card.Body>\n      <h3>{member.name}</h3>\n      <h5 className='text-secondary'>{member.tagline}</h5>\n      <p>{member.description}</p>\n    </Card.Body>\n  </Card>\n</Col>));\n\nclass TeamComponent extends React.Component {\n  render() {\n    return (<Container className='my-5'>\n      <h3>Who are we?</h3>\n      <p>In short: We are The Regulators!</p>\n      <p>In long: We are freshmen at The Cooper Union in Task One Team One of Prof. Raja&apos;s EID101(E) section, Cost Effective Diabetes Management. Our goal as a class is to apply the principles of the engineering design process to a real-world field of study.</p>\n      <Row>\n        {teamMembersHtml}\n      </Row>\n      <p>If you&apos;d like to reach out to the team or inquire about the website, you may contact Jonathan Lam (webmaster) at <a href='mailto:jonathanlamdev@gmail.com'>jonathanlamdev@gmail.com</a>.</p>\n    </Container>);\n  }\n}\n\nexport default TeamComponent;\n","// react and react router\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\n// bootstrap\nimport { Navbar, Nav, NavDropdown, Container, Jumbotron } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// import components\nimport Index from './index.component';\nimport About from './about.component';\nimport Team from './team.component';\nimport Media from './media.component';\n\n// main template\nconst AppRouter = () => (\n  <Router>\n    <div>\n      {/* nav bar */}\n      <Navbar expand='lg' sticky='top' id='nav-bar'>\n        <LinkContainer to='/'>\n          <Navbar.Brand>The Regulators</Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Toggle aria-controls='basic-navbar-nav'></Navbar.Toggle>\n        <Navbar.Collapse id='basic-navbar-nav'>\n          <Nav>\n            <LinkContainer to='/about'>\n              <NavDropdown title='About'>\n                <LinkContainer to='/about/solution'>\n                  <NavDropdown.Item>Solution</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/about/background'>\n                  <NavDropdown.Item>Background</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/about/chemistry'>\n                  <NavDropdown.Item>Chemistry</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/about/technology'>\n                  <NavDropdown.Item>Technology Stack</NavDropdown.Item>\n                </LinkContainer>\n                <LinkContainer to='/about/resources'>\n                  <NavDropdown.Item>Resources</NavDropdown.Item>\n                </LinkContainer>\n              </NavDropdown>\n            </LinkContainer>\n            <LinkContainer to='/team'>\n              <Nav.Link>Team</Nav.Link>\n            </LinkContainer>\n            <LinkContainer to='/media'>\n              <Nav.Link>Media</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      {/* routes */}\n      <Route path='/' exact component={Index} />\n      <Route path='/about/' component={About} />\n      <Route path='/team/' component={Team} />\n      <Route path='/media/' component={Media} />\n\n      {/* footer */}\n      <Jumbotron fluid className='mb-0' id='footer'>\n        <Container className='text-right'>\n          <div>Copyright &copy; 2018 The Regulators.</div>\n          <div>The Cooper Union for the Advancement of Science and Art.</div>\n        </Container>\n      </Jumbotron>\n    </div>\n  </Router>\n);\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './app-router';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}